{"version":3,"sources":["components/AddCategorys.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategorys","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifts","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAe,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACXC,mBAAS,IADE,mBACxCC,EADwC,KAC5BC,EAD4B,KAe/C,OACI,sBAAMC,SAXU,SAACC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAOlB,SACE,uBACMO,KAAK,OACLC,MAAOT,EACPU,SAlBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,aAuB/BZ,EAAae,WAAa,CACtBd,c,OAAee,EAAUC,KAAKC,Y,mCC7BrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,gDAEkCC,UAAUH,GAF5C,+DAGKI,MAAMF,GAHX,cAGbG,EAHa,gBAIIA,EAAUC,OAJd,uBAIXC,EAJW,EAIXA,KACFC,EAAQD,EAAKE,KAAI,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAClC,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDZ,SAACA,GAAa,IAAD,EAEVlB,mBAAS,CAACyB,KAAK,GAAKa,SAAQ,IAFlB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAcpC,OAXAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAd,GACFY,EAAS,CACTf,KAAKG,EACLU,SAAQ,SAGlB,CAACpB,IAGIqB,EDLcI,CAAazB,GAA3BO,EAR4B,EAQ5BA,KAAKa,EARuB,EAQvBA,QAIZ,OACI,qCACI,6BAAKpB,IACJoB,GAAS,yCACV,qBAAKJ,UAAU,gEAAf,SAGYT,EAAKE,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEnBxBe,EAAe,WAAO,IAAD,EACM5C,mBAAS,CAAC,YADhB,mBACvB6C,EADuB,KACX9C,EADW,KAO9B,OACI,qCACE,8CACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBAEA,6BAEI8C,EAAWlB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADJA,Y,MClBxB4B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.54e8af14.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategorys = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handlerInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handlerSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if (inputValue.trim().length>2){\r\n            setCategories(cats=>[inputValue,...cats ]);\r\n            setInputValue('');\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handlerSubmit}>\r\n          <input \r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handlerInputChange}\r\n          />\r\n        </form>\r\n    )\r\n    \r\n}\r\nAddCategorys.protoTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=5rwXNFPSGmRzYOrRG6Uf2HJrnHYc813g`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n    const gifts = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n\r\n    })\r\n    return gifts;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className='card'>\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    // const [images, setImage] = useState([]);\r\n\r\n    // useEffect(()=>{\r\n    //    getGifs(category)\r\n    //     .then(imgs=>setImage(imgs))\r\n    // }, [category] );\r\n\r\n    const {data,loading}=useFetchGifs(category);\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading&&<p>Cargando</p>}\r\n            <div className='card-grid animate__animated animate__fadeIn animate__delay-2s'>\r\n                \r\n                    {\r\n                        data.map(img=>(\r\n                            <GifGridItem \r\n                            key={img.id}\r\n                            {...img} />\r\n\r\n                        ))\r\n                    }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs =(category)=> {\r\n    \r\n    const [state, setState] = useState({data:[] , loading:true});\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(img=>{\r\n                setState({\r\n                data:img,\r\n                loading:false\r\n            });\r\n        })\r\n    },[category]);\r\n    \r\n\r\n    return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AddCategorys } from './components/AddCategorys';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['Simpson']);\r\n    // const handleAdd=()=>{\r\n    //   const serieNueva=\"Supercampeones\";\r\n    //   setCategories([...categories,serieNueva]);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n          <h2>GifExpertApp</h2>\r\n          <AddCategorys setCategories={setCategories}/>\r\n          <hr />\r\n  \r\n          <ol>\r\n            {\r\n              categories.map(category=>(\r\n                  <GifGrid \r\n                  key={ category }\r\n                  category={category}/>\r\n                  \r\n\r\n              ))\r\n            }\r\n          </ol>\r\n        </> \r\n    );\r\n};\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}